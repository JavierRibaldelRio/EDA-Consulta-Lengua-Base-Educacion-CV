---
title: "cluster"
format: html
---

```{r}
library(tidyverse)
library(sf)
library(ineapir)

```

## Cálculo de la distancia al mar

Datos obtenidos del CNIC
```{r}


municipios_shape <- st_read("data/cnig/lineas_limite/SHP_ETRS89/recintos_municipales_inspire_peninbal_etrs89/recintos_municipales_inspire_peninbal_etrs89.shp") |> 
    st_transform(25830)

l_costa <- st_read("data/costa/COSTA.shp") |> 
    filter(BAJAMAR == TRUE & CIERRACOST == TRUE) |> 
    st_transform(25830) |> 
    st_union() |> 
     st_line_merge()


    
datos_municipios <- municipios_shape |>
    filter(CODNUT2 == "ES52") |>            # Select CV
    mutate(
        geometry = geometry,
        name =  {
                name_clean <- str_trim(str_to_lower(NAMEUNIT))                           
                name_part  <- str_extract(name_clean, "^[^/]+")                      
                articulo   <- str_extract(name_part, "^(l'|el|la)\\b")               
                sin_art    <- str_remove(name_part, "^(l'|el|la)\\b\\s*")            
                final_name <- if_else(!is.na(articulo), 
                                      str_trim(str_glue("{sin_art} ({articulo})")), 
                                      str_trim(sin_art))                            
                final_name
  },                    # Formatear nombre
        ine_code = substr(NATCODE, 7, 11),  # Transform to INE code
        distancia_mar = ifelse(
            st_intersects(geometry, l_costa, sparse = FALSE)[,1],
            0,  # Si toca la costa (distancia = 0)
            st_distance(st_centroid(geometry), l_costa)  
            ),
        .keep = "none"  
        ) 

```

# Datos de Renta y de población

```{r}

ultimo_anyo_renta <- 2022
tipo_renta_seleccionada <- "Renta neta media por hogar"

# Dado el ID de la tabla del INE obtiene la renta media por hogar de dicha tabla
get_renta_INE <- function(id_table){
    
    data <- get_data_table(idTable=id_table, unnest = TRUE, tip="AM", metanames = TRUE, metacodes = TRUE) 
    
      return(data |>
                filter(
                        nchar(Unidades.territoriales.Codigo) == 5 & 
                        Anyo == ultimo_anyo_renta &
                        Indicadores.de.renta.media.y.mediana ==tipo_renta_seleccionada
                      ) |>
                select(
                      ine_code =Unidades.territoriales.Codigo,
                      renta = Valor
                      )
      )
         
}


# Tarda bastante rato
rentas <- bind_rows(
        get_renta_INE(31250),
        get_renta_INE(30833),
        get_renta_INE(30962)
    )



# Población

ultimo_anyo_poblacion <- 2024
poblacion_seleccionada <- "Total"

get_poblacion_INE <- function(id_table){
    
    data <- get_data_table(idTable=id_table, unnest = TRUE, tip="M", metanames = TRUE, metacodes = TRUE) 
      return(data |>
                filter(
                        nchar(Municipios.Codigo) == 5 & 
                        Anyo == ultimo_anyo_poblacion &
                        Sexo == poblacion_seleccionada
                      ) |>
                select(
                      ine_code = Municipios.Codigo,
                      poblacion = Valor
                      )
      )
         
}


poblaciones <- bind_rows(
    get_poblacion_INE(2903),   # Valencia
    get_poblacion_INE(2865),   # Castellón
    get_poblacion_INE(2856)    # Alicante
    
)

datos_municipios <- full_join(poblaciones,rentas,by="ine_code") |> 
    full_join(datos_municipios,by="ine_code")
```
   
## Datos electorales

Obtenidos de https://infoelectoral.interior.gob.es/es/elecciones-celebradas/area-de-descargas/ en este caso nos fijaremos en el porcentaje de votantes al partido de izquierdas sumar que se presentó a las elecciones en coalición con Compromís, partido nacionalista valenciano.

```{r}
resultados_elecciones <- read_csv("data/elecciones-23J.csv") 

datos_municipios <- resultados_elecciones |> 
    select(coP = `Código de Provincia`,
           sumar_compromis = "SUMAR",
           n_votantes = "Total votantes",
           coM = "Código de Municipio") |> 
    filter(coP %in% c(46, 3,12)) |> 
    mutate(
        ine_code= str_c(  # Genera el código del Ine
            str_pad(coP, width = 2, pad = "0"),
            str_pad(coM, width = 3, pad = "0")
        ),
        percent_sumar_compromis = sumar_compromis/n_votantes,
        .keep = "none"
    ) |> 
    full_join(datos_municipios,by="ine_code") |> 
    select(ine_code,name, poblacion, renta,
           percent_sumar_compromis,distancia_mar, geometry)

datos_municipios

st_write(datos_municipios, "data/datos_municipios_formated.gpkg",delete_dsn = TRUE )

```


